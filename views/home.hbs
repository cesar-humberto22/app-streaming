<div x-data="streaming" class="relative flex space-x-2 w-full h-full bg-gray-100">
    <div class="w-24 px-1 border-r border-gray-200 shadow-inner flex-shrink-0 h-full mb-4 flex justify-center items-center">

        <div class="splide overflow-hidden w-full h-full flex">
            <div class="splide__track">
                <ul class="h-full flex flex-col splide__list">
                    <template x-for="(imagen, index) in arrayImages" :key="index">
                        <li class="splide__slide">
                            <img x-bind:src="imagen">
                        </li>
                    </template>
                </ul>
            </div>
        </div>

    </div>

    <div class="py-2 px-1 w-full h-full flex flex-col">
        <div style="height: calc(100% - 5rem);" class="flex flex-shrink-0 w-full">
            <div class="pantalla w-full p-2 bg-white shadow-md rounded-lg">

                <div class="pantalla w-full shadow-lg overflow-hidden rounded-lg  h-full flex bg-black bg-opacity-95 justify-center items-center flex-col">
                    <video class="w-full h-full" 
                        :class="!isPlay? ' hidden ': ''" id="videoElement"></video>
                    <button @click="playVideo" class="text-white py-2 px-4 border border-gray-500 hover:bg-gray-950 hover:shadow-lg transition-all rounded-md" 
                        :class="isPlay? ' hidden ': ''" id="button2">Iniciar transmisi√≥n</button>
                </div>
                
            </div>
        </div>
        <div class="h-20 transform -translate-y-1 flex-shrink-0">
            <div class="px-2 py-1 w-full flex justify-start items-end rounded-lg">
                <span class="text-7xl" x-text="horaActual.h"></span>
                <span class="text-7xl">:</span>
                <span class="text-7xl" x-text="horaActual.m"></span>
                <span class="text-7xl">:</span>
                <span class="text-6xl" x-text="horaActual.s"></span>
                <span class="text-3xl ml-2 uppercase" x-text="horaActual.p"></span>
            </div>
        </div>

    </div>
</div>

<style>
    .pantalla{
        border-top-left-radius: 100% 7%;
        border-top-right-radius: 100% 7%;

        border-bottom-left-radius: 100% 7%;
        border-bottom-right-radius: 100% 7%;
    }
</style>

<script src="https://cdn.bootcss.com/flv.js/1.5.0/flv.min.js"></script>
<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('streaming', () => ({
            arrayImages: [
                "http://192.168.0.185:8080/public/images/1.png",
                "http://192.168.0.185:8080/public/images/2.png",
                "http://192.168.0.185:8080/public/images/3.png",
                "http://192.168.0.185:8080/public/images/4.png",
                "http://192.168.0.185:8080/public/images/5.png",
                "http://192.168.0.185:8080/public/images/6.png",
                "http://192.168.0.185:8080/public/images/7.png",
                "http://192.168.0.185:8080/public/images/8.png",
                "http://192.168.0.185:8080/public/images/9.png",
                "http://192.168.0.185:8080/public/images/10.png",
                "http://192.168.0.185:8080/public/images/11.png",
                "http://192.168.0.185:8080/public/images/12.png",
                "http://192.168.0.185:8080/public/images/13.png",
                "http://192.168.0.185:8080/public/images/1.png",
                "http://192.168.0.185:8080/public/images/2.png",
                "http://192.168.0.185:8080/public/images/3.png",
                "http://192.168.0.185:8080/public/images/4.png",
                "http://192.168.0.185:8080/public/images/5.png",
                "http://192.168.0.185:8080/public/images/6.png",
                "http://192.168.0.185:8080/public/images/7.png",
                "http://192.168.0.185:8080/public/images/8.png",
                "http://192.168.0.185:8080/public/images/9.png",
                "http://192.168.0.185:8080/public/images/10.png",
                "http://192.168.0.185:8080/public/images/11.png",
                "http://192.168.0.185:8080/public/images/12.png",
                "http://192.168.0.185:8080/public/images/13.png"
            ],
            flvPlayer: null,
            isPlay: false,
            horaActual: {
                h: 00,
                m: 00,
                s: 00,
                p: 'am'
            },

            init(){
                if (flvjs.isSupported()) {
                    this.loadVideo()
                    this.loadClima()
                    this.intervalTime()

                    setTimeout(() => this.loadSlider(), 10)
                    setInterval(() => this.intervalTime(), 1000)
                }
            },

            loadSlider(){
                const splide = new Splide(".splide", {
                    type: 'loop',
                    direction: 'ttb',
                    height: '100%',
                    perPage: 10,
                    perMove: 1,
                    speed: 400,
                    autoplay: true,
                    arrows: false
                });
                splide.mount();
            },

            intervalTime(){
                const date = new Date()
                const splitTime = date.toTimeString().substring(0, 8).split(":")
                this.horaActual = {
                    h: splitTime[0],
                    m: splitTime[1],
                    s: splitTime[2],
                    p: date.getHours() >= 12 ? 'pm' : 'am'
                }
            },

            playVideo(){
                this.isPlay = true;
                this.flvPlayer.load();
                this.flvPlayer.play();
            },

            async loadClima () {
                const data = await fetch('https://openweathermap.org/data/2.5/onecall?lat=25.6667&lon=-100.3167&units=metric&appid=439d4b804bc8187953eb36d2a8c26a02')
                const dataJSON = await data.json()
                let current = dataJSON.current, 
                    dayData = dataJSON.daily.find(t => t.sunrise === dataJSON.current.sunrise)

                console.log(current, dayData)
            },

            loadVideo(b = false){
                this.flvPlayer = flvjs.createPlayer({
                    type: 'flv',
                    isLive: true,
                    url: 'http://192.168.0.185:8000/livestream/{{id}}.flv?sign=1679520158487-f6401545762a9149239f66d527cf3060'
                }, {
                    //autoCleanupSourceBuffer: true,
                })
                this.flvPlayer.attachMediaElement(videoElement);
                this.flvPlayer.on(flvjs.Events.ERROR, () => {
                    this.flvPlayer.destroy();
                    this.loadVideo(true);
                })
                
                this.flvPlayer.on(flvjs.Events.LOADING_COMPLETE, () => {
                    this.flvPlayer.destroy();
                    this.loadVideo(true);
                })

                if(b){
                    this.flvPlayer.load();
                    this.flvPlayer.play();
                }
            },

        }));
    });
</script>